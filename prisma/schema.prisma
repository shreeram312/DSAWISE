// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String     @id @default(uuid())
  email        String     @unique
  name         String
  profileImage String?
  solutions    Solution[]
}

model Solution {
  id            String      @id @default(uuid())
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
  title         String
  description   String?
  language      String
  brutesol      BruteSol[]
  bettersol     BetterSol[]
  optimalsol    Optimal[]
  user          User        @relation(fields: [userId], references: [id])
  userId        String
}

model BruteSol {
  id           String    @id @default(uuid())
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  approach     String?
  solution     Solution @relation(fields: [solutionId], references: [id])
  solutionId   String
}

model BetterSol {
  id           String    @id @default(uuid())
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  approach     String?
  solution     Solution @relation(fields: [solutionId], references: [id])
  solutionId   String
}

model Optimal {
  id           String    @id @default(uuid())
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  approach     String?
  solution     Solution @relation(fields: [solutionId], references: [id])
  solutionId   String
}
